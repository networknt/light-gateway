# server.yml
server.httpPort: 9080
server.httpsPort: 9445
server.serviceId: com.networknt.local-gateway-1.0.0

# serviceDict.mapping:
#   /v1/pets@get: com.networknt.petstore-1.0.0
#   /v2/address@get: party.address-2.0.0
#   /v1/contact@post: party.contact-1.0.0

# pathPrefixService.yml
pathPrefixService.mapping:
  /v1/pets: com.networknt.petstore-1.0.0

# openapi-security.yml
openapi-security.enableVerifyJwt: false

# openapi-validator.yml
openapi-validator.enabled: true


# service.yml
service.singletons:
  - com.networknt.registry.URL:
      - com.networknt.registry.URLImpl:
          protocol: https
          host: localhost
          port: 7080
          path: direct
          parameters:
            com.networknt.petstore-1.0.0: https://localhost:8443
  - com.networknt.registry.Registry:
      - com.networknt.registry.support.DirectRegistry
  - com.networknt.balance.LoadBalance:
      - com.networknt.balance.RoundRobinLoadBalance
  - com.networknt.cluster.Cluster:
      - com.networknt.cluster.LightCluster
  - com.networknt.cache.CacheManager:
      - com.networknt.cache.CaffeineCacheManager
  - com.networknt.handler.ResponseInterceptor:
      - com.networknt.body.ResponseBodyInterceptor
      - com.networknt.restrans.ResponseTransformerInterceptor
  - com.networknt.handler.RequestInterceptor:
      - com.networknt.body.RequestBodyInterceptor
      - com.networknt.reqtrans.RequestTransformerInterceptor



## proxy yaml
proxy.host: http://localhost:8080

router.hostWhitelist:
  - 192.168.0.*
  - localhost


# handler.yml
handler.enabled: true
handler.basePath: /
handler.handlers:
  # Light-framework cross-cutting concerns implemented in the microservice
  - com.networknt.exception.ExceptionHandler@exception
  - com.networknt.metrics.MetricsHandler@metrics
  - com.networknt.traceability.TraceabilityHandler@traceability
  - com.networknt.correlation.CorrelationHandler@correlation
  # Cors handler to handler post/put pre-flight. It is not used in the sidecar but only in the router.
  - com.networknt.cors.CorsHttpHandler@cors
  - com.networknt.openapi.OpenApiHandler@specification
  - com.networknt.openapi.JwtVerifyHandler@security
  - com.networknt.body.BodyHandler@body
  - com.networknt.audit.AuditHandler@audit
  - com.networknt.sanitizer.SanitizerHandler@sanitizer
  - com.networknt.openapi.ValidatorHandler@validator
  # Header middleware to manipulate request and/or response headers before or after downstream server
  - com.networknt.header.HeaderHandler@header
  # Rate limit middleware to prevent DDoS attacks externally or throttle requests internally
  - com.networknt.limit.LimitHandler@limit
  # IP whitelist handler to allow only one or several IPs to connect to the gateway.
  #  - com.networknt.whitelist.WhitelistHandler@whitelist
  # Direct requests to named services based on the request path
  # - com.networknt.router.middleware.GatewayServiceDictHandler@path
  - com.networknt.router.middleware.PathPrefixServiceHandler@prefix
  # - com.networknt.router.middleware.GatewaySAMLTokenHandler@saml
  - com.networknt.router.RouterHandler@router
  - com.networknt.proxy.LightProxyHandler@proxy
  - com.networknt.proxy.ProxyServerInfoHandler@proxyServerInfo
  # - com.networknt.resource.VirtualHostHandler@virtual
  # Customer business domain specific cross-cutting concerns handlers
  # - com.example.validator.CustomizedValidator@custvalidator
  # Framework endpoint handlers
  # Control Pane middleware handlers and API handler
  - com.networknt.chaos.KillappAssaultHandler@killapp
  - com.networknt.chaos.LatencyAssaultHandler@latency
  - com.networknt.chaos.MemoryAssaultHandler@memory
  - com.networknt.chaos.ExceptionAssaultHandler@exchaos
  - com.networknt.chaos.ChaosMonkeyGetHandler@chaosget
  - com.networknt.chaos.ChaosMonkeyPostHandler@chaospost
  - com.networknt.health.HealthGetHandler@health
  - com.networknt.info.ServerInfoGetHandler@info
  - com.networknt.logging.handler.LoggerGetHandler@getLogger
  - com.networknt.logging.handler.LoggerPostHandler@postLogger
  - com.networknt.logging.handler.LoggerGetLogContentsHandler@getLogContents
  - com.networknt.config.reload.handler.ModuleRegistryGetHandler@modules
  - com.networknt.config.reload.handler.ConfigReloadHandler@configReload
  - com.networknt.specification.SpecDisplayHandler@spec
  - com.networknt.specification.SpecSwaggerUIHandler@swaggerui
  - com.networknt.specification.FaviconHandler@favicon
  - com.networknt.handler.ResponseInterceptorInjectionHandler@responseInterceptor
  - com.networknt.handler.RequestInterceptorInjectionHandler@requestInterceptor
  - com.networknt.router.OAuthServerHandler@oauth
  - com.networknt.router.OAuthServerGetHandler@getOauth
  - com.networknt.server.handler.ServerShutdownHandler@shutdown

handler.chains.default:
  - exception
  - metrics
  - limit
  - traceability
  - correlation
  - killapp
  - latency
  - memory
  - exchaos
  - cors
  # - stateless
  - header
  - specification
  - security
  - requestInterceptor
  - responseInterceptor
  - audit
  - sanitizer
  - validator
  #- prefix
  - router
  - proxy

# response-transformer.yml
response-transformer.appliedPathPrefixes:
  - /aizws/MrasLabProxy/1.0

# request-transformer.yml
request-transformer.appliedPathPrefixes:
  - /aizws/MrasLabProxy/1.0

# cache.yml
cache.caches:
  - cacheName: jwt
    expiryInMinutes: 15
    maxSize: 100
  - cacheName: jwk
    expiryInMinutes: 129600
    maxSize: 100
