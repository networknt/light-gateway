# server.yml
server.httpsPort: 8443
server.serviceId: com.networknt.server-proxy-1.0.0

# router.yml
# router.maxRequestTime: 3000

# proxy.yml
proxy.hosts: https://localhost:9443

# header.yml
header.enabled: true
header.response.update:
  Content-Security-Policy: default-src 'none'; form-action 'none'; frame-ancestors 'none'; img-src 'self' https://images.example.com;

# cors.yml
cors.enabled: true

# limit.yml
limit.enabled: false
limit.rateLimit: 10/s
limit.errorCode: 429

# sanitizer.yml
sanitizer.enabled: true
sanitizer.bodyEnabled: false
sanitizer.headerEnabled: true
sanitizer.headerEncoder: html-content
#sanitizer.headerAttributesToEncode: x-traceability-id
#sanitizer.headerAttributesToIgnore: test

#Audit.yml
audit.enabled: true
audit.mask: true
audit.statusCode: true
audit.responseTime: true
audit.auditOnError: false
audit.logLevelIsError: false

#okta security start
# client.yml
client.verifyHostname: false
client.tokenKeyServerUrl: https://localhost:6886
client.tokenKeyUri: /oauth2/keys
client.tokenProxyHost:
client.tokenProxyPort:
client.timeout: 1000
client.tokenKeyEnableHttp2: true
#client.tokenCcClientId: f7d42348-c647-4efb-a52d-4c5787421e73
#client.tokenRtClientId: f7d42348-c647-4efb-a52d-4c5787421e73
#client.tokenKeyClientId: f7d42348-c647-4efb-a52d-4c5787421e73
#client.signClientId: f7d42348-c647-4efb-a52d-4c5787421e73
#client.signKeyClientId: f7d42348-c647-4efb-a52d-4c5787421e73
#client.derefClientId: f7d42348-c647-4efb-a52d-4c5787421e73
#client.injectOpenTracing: true

#security.yml
openapi-security.enableVerifyJwt: false
openapi-security.enableExtractScopeToken: false
openapi-security.enableVerifyScope: false
openapi-security.keyResolver: X509Certificate
openapi-security.bootstrapFromKeyService: false
# okta security end

# service.yml
service.singletons: [{"com.networknt.registry.URL":["com.networknt.registry.URLImpl"]},{"com.networknt.registry.Registry":["com.networknt.registry.support.DirectRegistry"]},{"com.networknt.balance.LoadBalance":["com.networknt.balance.RoundRobinLoadBalance"]},{"com.networknt.cluster.Cluster":["com.networknt.cluster.LightCluster"]},{"com.networknt.utility.Decryptor":["com.networknt.decrypt.AESDecryptor"]},{"com.networknt.handler.ResponseInterceptor":["com.networknt.body.ResponseBodyInterceptor"]},{"com.networknt.handler.RequestInterceptor":["com.networknt.body.RequestBodyInterceptor"]}]

# pathPrefixService.yml
# pathPrefixService.enabled: true
# pathPrefixService.mapping: {"/v1/pets":"com.networknt.petstore-1.0.0"}

# whitelist.yml
whitelist.enabled: false
whitelist.paths:
  # For a particular endpoint(path@method), there are three IPs can access
  '/health/com.networknt.petstore-1.0.0@get':
    # IPv4 Exact
    - '127.0.0.1'
    # IPv4 Wildcard
    - '10.10.*.*'
    # IPv4 Slash
    - '127.0.0.48/30'

  # For a path, the following IP can access regardless the method
  '/prometheus@get':
    # IPv6 Exact
    - 'FE45:00:00:000:0:AAA:FFFF:0045'
    # IPv6 Prefix
    - 'FE45:00:00:000:0:AAA:FFFF:*'
    # IPv6 Slash
    - 'FE45:00:00:000:0:AAA:FFFF:01F4/127'

  # For a particular endpoint(path@method), there are three IPs can access
  '/data@get':
    # IPv4 Exact
    - '127.0.0.2'
    # IPv4 Wildcard
    - '10.10.*.*'
    # IPv4 Slash
    - '127.0.0.48/30'

# handler.yml
handler.enabled: true
handler.basePath: /v1
handler.handlers:
  # Light-framework cross-cutting concerns implemented in the microservice
  - com.networknt.exception.ExceptionHandler@exception
  - com.networknt.metrics.MetricsHandler@metrics
  - com.networknt.traceability.TraceabilityHandler@traceability
  - com.networknt.correlation.CorrelationHandler@correlation
  # Cors handler to handler post/put pre-flight. It is not used in the sidecar but only in the router.
  - com.networknt.cors.CorsHttpHandler@cors
  - com.networknt.openapi.OpenApiHandler@specification
  - com.networknt.openapi.JwtVerifyHandler@security
  - com.networknt.body.BodyHandler@body
  - com.networknt.audit.AuditHandler@audit
  - com.networknt.sanitizer.SanitizerHandler@sanitizer
  - com.networknt.openapi.ValidatorHandler@validator
  # Header middleware to manipulate request and/or response headers before or after downstream server
  - com.networknt.header.HeaderHandler@header
  # Rate limit middleware to prevent DDoS attacks externally or throttle requests internally
  - com.networknt.limit.LimitHandler@limit
  # IP whitelist handler to allow only one or several IPs to connect to the gateway.
  #  - com.networknt.whitelist.WhitelistHandler@whitelist
  # Direct requests to named services based on the request path
  # - com.networknt.router.middleware.GatewayServiceDictHandler@path
  # - com.networknt.router.middleware.PathPrefixServiceHandler@prefix
  # - com.networknt.router.middleware.GatewaySAMLTokenHandler@saml
  # - com.networknt.router.GatewayRouterHandler@router
  - com.networknt.proxy.LightProxyHandler@proxy
  # - com.networknt.resource.VirtualHostHandler@virtual
  # Customer business domain specific cross-cutting concerns handlers
  # - com.example.validator.CustomizedValidator@custvalidator
  # Framework endpoint handlers
  # Control Pane middleware handlers and API handler
  - com.networknt.chaos.KillappAssaultHandler@killapp
  - com.networknt.chaos.LatencyAssaultHandler@latency
  - com.networknt.chaos.MemoryAssaultHandler@memory
  - com.networknt.chaos.ExceptionAssaultHandler@exchaos
  - com.networknt.chaos.ChaosMonkeyGetHandler@chaosget
  - com.networknt.chaos.ChaosMonkeyPostHandler@chaospost
  - com.networknt.health.HealthGetHandler@health
  - com.networknt.info.ServerInfoGetHandler@info
  - com.networknt.logging.handler.LoggerGetHandler@getLogger
  - com.networknt.logging.handler.LoggerPostHandler@postLogger
  - com.networknt.logging.handler.LoggerGetLogContentsHandler@getLogContents
  - com.networknt.config.reload.handler.ModuleRegistryGetHandler@modules
  - com.networknt.config.reload.handler.ConfigReloadHandler@configReload
  - com.networknt.specification.SpecDisplayHandler@spec
  - com.networknt.specification.SpecSwaggerUIHandler@swaggerui
  - com.networknt.specification.FaviconHandler@favicon
  - com.networknt.handler.ResponseInterceptorInjectionHandler@responseInterceptor
  - com.networknt.handler.RequestInterceptorInjectionHandler@requestInterceptor
  - com.networknt.router.OAuthServerHandler@oauth
  - com.networknt.server.handler.ServerShutdownHandler@shutdown

handler.chains.default:
  - exception
  - metrics
  - limit
  - traceability
  - correlation
  - killapp
  - latency
  - memory
  - exchaos
  - cors
  - header
  - requestInterceptor
  - responseInterceptor
  - specification
  - security
  - audit
  - sanitizer
  - validator
  - proxy
