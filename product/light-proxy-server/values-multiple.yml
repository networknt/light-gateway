# This is a router configuration that can route traffic to multiple downstream APIs from a consumer.
# server.yml
server.enableHttp: true
server.serviceId: com.networknt.proxy-server

# client.yml
client.multipleAuthServers: true
client.pathPrefixServices:
  /abc/products: com.networknt.market

client.tokenKeyServiceIdAuthServers:
  com.networknt.market:
    server_url: https://sunlifeapi.oktapreview.com
    uri: /oauth2/aus66u5cybTrCsbZs1d6/v1/keys
    enableHttp2: false
    audience: dev.canada.referenceapi.sunlifeapis.oktapreview.com

client.tokenCcServiceIdAuthServers:
  com.networknt.petstore:
    server_url: https://sunlifeapi.oktapreview.com
    uri: /oauth2/aus66u5cybTrCsbZs1d6/v1/token
    enableHttp2: false
    client_id: 0oa66u56irXiekQVQ1d6
    client_secret: CR8h4P5Vbetwa-t8v5H6qhQ6jjQEv4dZJF2h50F3
    scope:
      - https://services.sunlife.com/okta/oauth2/corporate.reference-domain.petstore.pets.read

# proxy.yml
proxy.hosts: https://localhost:6443

# router.yml
router.maxRequestTime: 3000
router.hostWhitelist:
  - localhost

# pathPrefixService.yml
pathPrefixService.mapping:
  /v1/pets: com.networknt.petstore

# service.yml
service.singletons:
  - com.networknt.registry.URL:
      - com.networknt.registry.URLImpl
  - com.networknt.registry.Registry:
      - com.networknt.registry.support.DirectRegistry
  - com.networknt.balance.LoadBalance:
      - com.networknt.balance.RoundRobinLoadBalance
  - com.networknt.cluster.Cluster:
      - com.networknt.cluster.LightCluster

# direct-registry.yml
direct-registry.directUrls:
  com.networknt.petstore: https://localhost:9443

# handler.yml
handler.enabled: true
handler.basePath: /
handler.handlers:
  # Light-framework cross-cutting concerns implemented in the microservice
  - com.networknt.exception.ExceptionHandler@exception
  - com.networknt.metrics.MetricsHandler@metrics
  - com.networknt.traceability.TraceabilityHandler@traceability
  - com.networknt.correlation.CorrelationHandler@correlation
  # Cors handler to handler post/put pre-flight. It is not used in the sidecar but only in the router.
  - com.networknt.cors.CorsHttpHandler@cors
  - com.networknt.openapi.OpenApiHandler@specification
  - com.networknt.openapi.JwtVerifyHandler@security
  - com.networknt.body.BodyHandler@body
  - com.networknt.audit.AuditHandler@audit
  - com.networknt.sanitizer.SanitizerHandler@sanitizer
  - com.networknt.openapi.ValidatorHandler@validator
  # Header middleware to manipulate request and/or response headers before or after downstream server
  - com.networknt.header.HeaderHandler@header
  # Rate limit middleware to prevent DDoS attacks externally or throttle requests internally
  - com.networknt.limit.LimitHandler@limit
  # IP whitelist handler to allow only one or several IPs to connect to the gateway.
  #  - com.networknt.whitelist.WhitelistHandler@whitelist
  # Direct requests to named services based on the request path
  - com.networknt.router.middleware.SidecarPathPrefixServiceHandler@prefix
  - com.networknt.router.middleware.SidecarTokenHandler@token
  - com.networknt.router.SidecarRouterHandler@router
  - com.networknt.proxy.LightProxyHandler@proxy
  - com.networknt.proxy.ProxyServerInfoHandler@proxyServerInfo
  # - com.networknt.resource.VirtualHostHandler@virtual
  # Customer business domain specific cross-cutting concerns handlers
  # - com.example.validator.CustomizedValidator@custvalidator
  # Framework endpoint handlers
  # Control Pane middleware handlers and API handler
  - com.networknt.chaos.KillappAssaultHandler@killapp
  - com.networknt.chaos.LatencyAssaultHandler@latency
  - com.networknt.chaos.MemoryAssaultHandler@memory
  - com.networknt.chaos.ExceptionAssaultHandler@exchaos
  - com.networknt.chaos.ChaosMonkeyGetHandler@chaosget
  - com.networknt.chaos.ChaosMonkeyPostHandler@chaospost
  - com.networknt.health.HealthGetHandler@health
  - com.networknt.info.ServerInfoGetHandler@info
  - com.networknt.logging.handler.LoggerGetHandler@getLogger
  - com.networknt.logging.handler.LoggerPostHandler@postLogger
  - com.networknt.logging.handler.LoggerGetLogContentsHandler@getLogContents
  - com.networknt.config.reload.handler.ModuleRegistryGetHandler@modules
  - com.networknt.config.reload.handler.ConfigReloadHandler@configReload
  - com.networknt.specification.SpecDisplayHandler@spec
  - com.networknt.specification.SpecSwaggerUIHandler@swaggerui
  - com.networknt.specification.FaviconHandler@favicon
  - com.networknt.router.OAuthServerHandler@oauth
  - com.networknt.router.OAuthServerGetHandler@getOauth
  - com.networknt.server.handler.ServerShutdownHandler@shutdown

handler.chains.default:
  - exception
  - prefix
  # - metrics
  - traceability
  - correlation
  # - cors
  - header
  #- audit
  - token
  - router
  - specification
  - security
  - validator
  #- sanitizer
  - proxy

# openapi-security
openapi-security.enableVerifyScope: false
openapi-security.bootstrapFromKeyService: true

# token.yml
token.enabled: true
token.appliedPathPrefixes:
  - /v1/pets
